{"ast":null,"code":"var _jsxFileName = \"/Users/fs/Documents/Eyewear website/my-project/src/App.jsx\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Nav from \"./Components/Nav/Nav\";\n// 引入生命周期钩子函数 useEffect\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// 引入 {Outlet}\nimport { Outlet } from \"react-router-dom\";\n// 1.从react-redux里面引入Provider\nimport { Provider } from \"react-redux\";\n// 引入store仓库\nimport store from \"./Components/Store/Store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let navigate = useNavigate();\n  // 使用useEffect函数，[]使用空数组时，是因为只有在第一次使用的时候去执行,第一次打开项目时直接进显示home页面!!!\n  useEffect(() => {\n    navigate(\"/home\");\n  }, []);\n  return (\n    /*#__PURE__*/\n    // 将reducer里面的数据保存在store里面，然后在app.jsx里面通过Provider把数据提供供应给各个组件\n    _jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Nav","useEffect","useNavigate","Outlet","Provider","store","jsxDEV","_jsxDEV","App","_s","navigate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fs/Documents/Eyewear website/my-project/src/App.jsx"],"sourcesContent":["import \"./App.css\";\nimport Nav from \"./Components/Nav/Nav\";\n// 引入生命周期钩子函数 useEffect\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// 引入 {Outlet}\nimport { Outlet } from \"react-router-dom\";\n// 1.从react-redux里面引入Provider\nimport { Provider } from \"react-redux\";\n// 引入store仓库\nimport store from \"./Components/Store/Store\";\n\nfunction App() {\n  let navigate = useNavigate();\n  // 使用useEffect函数，[]使用空数组时，是因为只有在第一次使用的时候去执行,第一次打开项目时直接进显示home页面!!!\n  useEffect(() => {\n    navigate(\"/home\");\n  }, []);\n  return (\n    // 将reducer里面的数据保存在store里面，然后在app.jsx里面通过Provider把数据提供供应给各个组件\n    <Provider store={store}>\n      <div className=\"App\">\n        <Nav></Nav>\n        <Outlet></Outlet>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,GAAG,MAAM,sBAAsB;AACtC;AACA,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,SAASC,MAAM,QAAQ,kBAAkB;AACzC;AACA,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAIC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC5B;EACAD,SAAS,CAAC,MAAM;IACdS,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACE;IACAH,OAAA,CAACH,QAAQ;MAACC,KAAK,EAAEA,KAAM;MAAAM,QAAA,eACrBJ,OAAA;QAAKK,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAClBJ,OAAA,CAACP,GAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACXT,OAAA,CAACJ,MAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;AAEf;AAACP,EAAA,CAfQD,GAAG;EAAA,QACKN,WAAW;AAAA;AAAAe,EAAA,GADnBT,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}